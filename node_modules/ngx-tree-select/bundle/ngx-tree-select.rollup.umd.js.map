{"version":3,"file":"ngx-tree-select.rollup.umd.js","sources":["../../../src/ngx-tree-select/src/module.ts","../../../src/ngx-tree-select/src/components/tree-select-item.component.ts","../../../src/ngx-tree-select/src/directives/off-click.directive.ts","../../../src/ngx-tree-select/src/pipes/item.pipe.ts","../../../src/ngx-tree-select/src/components/tree-select.component.ts","../../../src/ngx-tree-select/src/services/select.service.ts","../../../src/ngx-tree-select/src/models/select-option.ts","../../../src/ngx-tree-select/src/models/selectable-item.ts","../../../src/ngx-tree-select/src/models/tree-select-default-options.ts","../../../src/ngx-tree-select/src/models/expand-mode.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ItemPipe } from './pipes/item.pipe';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { OffClickDirective } from './directives/off-click.directive';\nimport { TreeSelectComponent } from './components/tree-select.component';\nimport { TreeSelectDefaultOptions } from './models/tree-select-default-options';\nimport { TreeSelectItemComponent } from './components/tree-select-item.component';\nexport class NgxTreeSelectModule {\n/**\n * @param {?} options\n * @return {?}\n */\npublic static forRoot(options: TreeSelectDefaultOptions): ModuleWithProviders {\n    return {\n      ngModule: NgxTreeSelectModule,\n      providers: [\n        { provide: TreeSelectDefaultOptions, useValue: options }\n      ]\n    };\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    TreeSelectComponent,\n    TreeSelectItemComponent,\n    OffClickDirective,\n    ItemPipe\n  ],\n  exports: [\n    TreeSelectComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxTreeSelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxTreeSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxTreeSelectModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  Output\n  } from '@angular/core';\nimport { SelectableItem } from '../models/selectable-item';\nimport { SelectService } from '../services/select.service';\nexport class TreeSelectItemComponent {\n/**\n * @return {?}\n */\npublic get isOpen() {\n    return this.item.isOpen;\n  }\npublic onTouchedCallBack: () => void;\npublic item: SelectableItem;\n/**\n * @param {?} svc\n */\npublic constructor(\nprivate svc: SelectService\n  ) { }\n/**\n * @param {?} $event\n * @return {?}\n */\npublic toggleOpen($event: any) {\n    $event.stopPropagation();\n    if (this.haveChildren) {\n      this.item.isOpen = !this.item.isOpen;\n    } else {\n      this.select($event);\n    }\n  }\n/**\n * @return {?}\n */\nget allowParentSelection(): boolean {\n    return this.svc.Configuration.allowParentSelection;\n  }\n/**\n * @return {?}\n */\nget needCheckBox(): boolean {\n    return this.svc.Configuration.isHierarchy() && this.svc.Configuration.allowMultiple;\n  }\n/**\n * @return {?}\n */\npublic get haveChildren(): boolean {\n    return this.item && this.item.children && this.item.children.length > 0;\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\npublic select($event: any): void {\n    $event.stopPropagation();\n    if (this.svc.Configuration.allowMultiple ||\n        !this.haveChildren ||\n        this.svc.Configuration.allowParentSelection) {\n      this.svc.toggleItemSelection(this.item);\n    }\n    this.onTouchedCallBack();\n  }\n/**\n * @return {?}\n */\npublic get filter(): string {\n    return this.svc.Configuration.filter;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tree-select-item',\n  templateUrl: './tree-select-item.component.html',\n  styleUrls: ['./tree-select-item.component.scss']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onTouchedCallBack': [{ type: Input },],\n'item': [{ type: Input },],\n};\n}\n\nfunction TreeSelectItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeSelectItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeSelectItemComponent.ctorParameters;\n/** @type {?} */\nTreeSelectItemComponent.propDecorators;\n/** @type {?} */\nTreeSelectItemComponent.prototype.onTouchedCallBack;\n/** @type {?} */\nTreeSelectItemComponent.prototype.item;\n/** @type {?} */\nTreeSelectItemComponent.prototype.svc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID\n  } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nexport class OffClickDirective implements OnInit, OnDestroy {\npublic offClickHandler: any;\n/**\n * @param {?} platformId\n */\nconstructor(\nprivate platformId: string) { }\n/**\n * @return {?}\n */\npublic ngOnInit(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      setTimeout(() => { document.addEventListener('click', this.offClickHandler); }, 0);\n    }\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      document.removeEventListener('click', this.offClickHandler);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[off-click]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'offClickHandler': [{ type: Input, args: ['off-click', ] },],\n};\n}\n\nfunction OffClickDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nOffClickDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOffClickDirective.ctorParameters;\n/** @type {?} */\nOffClickDirective.propDecorators;\n/** @type {?} */\nOffClickDirective.prototype.offClickHandler;\n/** @type {?} */\nOffClickDirective.prototype.platformId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SelectableItem } from '../models/selectable-item';\nexport class ItemPipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\npublic transform(value: SelectableItem[]) {\n    // ES6 array destructuring\n    return value.filter((item) => item.matchFilter);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'itemPipe' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ItemPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nItemPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItemPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  forwardRef,\n  HostListener,\n  Input,\n  OnInit\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ItemPipe } from '../pipes/item.pipe';\nimport { SelectableItem } from '../models/selectable-item';\nimport { SelectOption } from '../models/select-option';\nimport { SelectService } from '../services/select.service';\nimport { TreeSelectDefaultOptions } from '../models/tree-select-default-options';\nimport { ExpandMode } from '../models/expand-mode';\n\n// tslint:disable-next-line:no-empty\nconst /** @type {?} */ noop = () => {};\n\nexport const /** @type {?} */ CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line:no-forward-ref\n  useExisting: forwardRef(() => TreeSelectComponent),\n  multi: true\n};\nexport class TreeSelectComponent implements ControlValueAccessor {\npublic onTouchedCallback: () => void = noop;\npublic showMoreLink = false;\npublic moreLoaded = false;\npublic disabled = false;\npublic placeholder = '';\npublic filterPlaceholder = 'Type here for filtering items...';\npublic allowFilter = true;\nprivate _isOpen = false;\nprivate onChangeCallback: (_: any) => void = noop;\nprivate haveFocus = false;\nprivate inputFocus = false;\n/**\n * @param {?} value\n * @return {?}\n */\npublic set items(value: any[]) {\n    this.svc.setItems(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set idField(value: string) {\n    this.svc.setConfiguration((opt) => opt.idProperty = value, true);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set textField(value: string) {\n    this.svc.setConfiguration((opt) => opt.textProperty = value, true);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set allowParentSelection(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.allowParentSelection = value, true);\n  }\n/**\n * @return {?}\n */\npublic get allowParentSelection(): boolean {\n    return this.svc.Configuration.allowParentSelection;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set childrenField(value: string) {\n    this.svc.setConfiguration((opt) => opt.childProperty = value, true);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set multiple(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.allowMultiple = value, true);\n  }\n/**\n * @return {?}\n */\npublic get multiple(): boolean {\n    return this.svc.Configuration.allowMultiple;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set filterCaseSensitive(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.filterCaseSensitive = value, true);\n  }\n/**\n * @return {?}\n */\npublic get filterCaseSensitive(): boolean {\n    return this.svc.Configuration.filterCaseSensitive;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set expandMode(value: string) {\n    this.svc.setConfiguration((opt) => opt.expandMode = value, true);\n    this.svc.setExpand();\n  }\n/**\n * @return {?}\n */\npublic get expandMode(): string {\n    return this.svc.Configuration.expandMode;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set maxVisibleItemCount(value: number) {\n    this.svc.setConfiguration((opt) => opt.maxVisibleItemCount = value, true);\n  }\n/**\n * @return {?}\n */\npublic get maxVisibleItemCount(): number {\n    return this.svc.Configuration.maxVisibleItemCount;\n  }\n/**\n * @return {?}\n */\npublic get internalItems(): SelectableItem[] {\n    return this.svc.getInternalItems() || [];\n  }\n/**\n * @return {?}\n */\npublic get selection(): SelectableItem[] {\n    this.showMoreLink = (\n      this.maxVisibleItemCount > 0 &&\n      ((this.svc.getInternalSelection().length - this.maxVisibleItemCount) > 0)\n    );\n    return this.svc.getInternalSelection();\n  }\n/**\n * @return {?}\n */\npublic get filter(): string {\n    return this.svc.Configuration.filter;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set filter(value: string) {\n    this.svc.setConfiguration((opt) => opt.filter = value, false);\n    for (const /** @type {?} */ item of this.internalItems) {\n      this.ProcessMatchFilterTreeItem(item, this.svc.Configuration.filter);\n    }\n    this.svc.setExpand();\n  }\n/**\n * @param {?} svc\n * @param {?} defaultOpts\n */\npublic constructor(\nprivate svc: SelectService,\nprivate defaultOpts: TreeSelectDefaultOptions\n  ) {\n    this.clickedOutside = this.clickedOutside.bind(this);\n\n    this.svc.modelChanged$.subscribe((result) => {\n      this.onChangeCallback(result);\n    });\n    this.maxVisibleItemCount = (defaultOpts.maxVisibleItemCount || 0);\n    this.allowParentSelection = (\n      (defaultOpts.allowParentSelection === undefined ||\n       defaultOpts.allowParentSelection === null) ?\n        true :\n        defaultOpts.allowParentSelection\n    );\n    this.allowFilter = (\n      (defaultOpts.allowFilter === undefined || defaultOpts.allowFilter === null) ?\n        true :\n        defaultOpts.allowFilter\n    );\n    this.filterCaseSensitive = (\n      (defaultOpts.filterCaseSensitive === undefined || defaultOpts.filterCaseSensitive === null) ?\n        false :\n        defaultOpts.filterCaseSensitive\n    );\n    this.filterPlaceholder = (defaultOpts.filterPlaceholder || 'Type here for filtering items...');\n    this.idField = (defaultOpts.idField || 'id');\n    this.textField = (defaultOpts.textField || 'id');\n    this.childrenField = (defaultOpts.childrenField || '');\n    this.expandMode = (defaultOpts.expandMode || ExpandMode.None);\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\npublic keyUp($event: any) {}\n/**\n * @param {?} $event\n * @return {?}\n */\npublic toggle($event: any) {\n    $event.preventDefault();\n    this.haveFocus = true;\n    this.svc.toggleOpen();\n  }\n/**\n * @param {?} $event\n * @param {?} item\n * @return {?}\n */\npublic removeItem($event: any, item: SelectableItem): void {\n    $event.stopPropagation();\n    this.svc.toggleItemSelection(item);\n  }\n/**\n * @return {?}\n */\npublic get isOpen(): boolean {\n    return this.svc.Configuration.isOpen;\n  }\n/**\n * @return {?}\n */\npublic clickedOutside() {\n    if (!this.inputFocus) {\n      if (!this.haveFocus && this.isOpen || this.haveFocus && !this.isOpen) {\n        this.onTouched();\n      }\n      this.haveFocus = false;\n    }\n  }\n/**\n * @return {?}\n */\npublic onTouched() {\n    this.svc.close();\n    this.onTouchedCallback();\n  }\n/**\n * @return {?}\n */\npublic setInputFocus() {\n    this.inputFocus = true;\n  }\n/**\n * @return {?}\n */\npublic setInputFocusOut() {\n    this.inputFocus = false;\n  }\n/**\n * Write a new value to the element.\n * \n * \\@memberof TreeSelectComponent\n * @param {?} value\n * @return {?}\n */\npublic writeValue(value: any): void {\n    this.svc.setSelection(value);\n  }\n/**\n * Set the function to be called when the control receives a change event.\n * \n * \\@memberof TreeSelectComponent\n * @param {?} fn\n * @return {?}\n */\npublic registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n/**\n * Set the function to be called when the control receives a touch event.\n * \n * \\@memberof TreeSelectComponent\n * @param {?} fn\n * @return {?}\n */\npublic registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n/**\n * This function is called when the control status changes to or from \"DISABLED\".\n * Depending on the value, it will enable or disable the appropriate DOM element.\n * \n * \\@memberof TreeSelectComponent\n * @param {?} isDisabled\n * @return {?}\n */\npublic setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n/**\n * This finction is called when user click on show more link.\n * \n * \\@memberof TreeSelectComponent\n * @param {?} $event\n * @return {?}\n */\npublic loadMore($event: any) {\n    $event.stopPropagation();\n    this.moreLoaded = !this.moreLoaded;\n  }\n/**\n * @param {?} tree\n * @param {?} filter\n * @return {?}\n */\nprivate ProcessMatchFilterTreeItem(tree: SelectableItem, filter: string): boolean {\n    let /** @type {?} */ result = false;\n    if (tree && tree.children && tree.children.length > 0) {\n      for (const /** @type {?} */ child of tree.children) {\n        result = this.ProcessMatchFilterTreeItem(child, filter) || result;\n      }\n    }\n    tree.matchFilter = this.filterCaseSensitive ?\n                      (\n                        tree.id.indexOf(filter) > -1 ||\n                        tree.text.indexOf(filter) > -1 ||\n                        result) :\n                      (\n                        tree.id.toLowerCase().indexOf(filter.toLowerCase()) > -1 ||\n                        tree.text.toLowerCase().indexOf(filter.toLowerCase()) > -1 ||\n                        result\n                      );\n    return tree.matchFilter;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tree-select',\n  templateUrl: './tree-select.component.html',\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR, SelectService],\n  styleUrls: ['./tree-select.component.scss']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectService, },\n{type: TreeSelectDefaultOptions, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'filterPlaceholder': [{ type: Input },],\n'allowFilter': [{ type: Input },],\n'items': [{ type: Input },],\n'idField': [{ type: Input },],\n'textField': [{ type: Input },],\n'allowParentSelection': [{ type: Input },],\n'childrenField': [{ type: Input },],\n'multiple': [{ type: Input },],\n'filterCaseSensitive': [{ type: Input },],\n'expandMode': [{ type: Input },],\n'maxVisibleItemCount': [{ type: Input },],\n};\n}\n\nfunction TreeSelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeSelectComponent.ctorParameters;\n/** @type {?} */\nTreeSelectComponent.propDecorators;\n/** @type {?} */\nTreeSelectComponent.prototype.onTouchedCallback;\n/** @type {?} */\nTreeSelectComponent.prototype.showMoreLink;\n/** @type {?} */\nTreeSelectComponent.prototype.moreLoaded;\n/** @type {?} */\nTreeSelectComponent.prototype.disabled;\n/** @type {?} */\nTreeSelectComponent.prototype.placeholder;\n/** @type {?} */\nTreeSelectComponent.prototype.filterPlaceholder;\n/** @type {?} */\nTreeSelectComponent.prototype.allowFilter;\n/** @type {?} */\nTreeSelectComponent.prototype._isOpen;\n/** @type {?} */\nTreeSelectComponent.prototype.onChangeCallback;\n/** @type {?} */\nTreeSelectComponent.prototype.haveFocus;\n/** @type {?} */\nTreeSelectComponent.prototype.inputFocus;\n/** @type {?} */\nTreeSelectComponent.prototype.svc;\n/** @type {?} */\nTreeSelectComponent.prototype.defaultOpts;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Subject } from 'rxjs/Subject';\nimport { SelectableItem } from '../models/selectable-item';\nimport { SelectOption } from '../models/select-option';\nimport { Injectable } from '@angular/core';\nimport { ExpandMode } from '../models/expand-mode';\n\nexport type OptionDelegate = (options: SelectOption) => void;\nexport class SelectService {\npublic modelChanged$: Subject<any> = new Subject<any>();\nprivate _items: SelectableItem[];\nprivate _options: SelectOption = new SelectOption();\n/**\n * @return {?}\n */\npublic close(): void {\n    if (this.Configuration.isOpen) {\n      this.setConfiguration((opt) => opt.isOpen = false, false);\n    }\n  }\n/**\n * @return {?}\n */\npublic open(): void {\n    if (!this.Configuration.isOpen) {\n      this.setConfiguration((opt) => opt.isOpen = true, false);\n    }\n  }\n/**\n * @return {?}\n */\npublic toggleOpen(): void {\n    this.setConfiguration((opt) => opt.isOpen = !opt.isOpen, false);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic setItems(value: any[]) {\n    this.setConfiguration((opt) => opt.items = value, true);\n    this.setExpand();\n  }\n/**\n * @return {?}\n */\npublic getInternalItems(): SelectableItem[] {\n    return this._items;\n  }\n/**\n * @param {?} values\n * @return {?}\n */\npublic setSelection(values: any | any[]): void {\n    this.setConfiguration((opt) => opt.model = values, true);\n    this.setExpand();\n  }\n/**\n * @param {?} items\n * @param {?} destination\n * @return {?}\n */\npublic setSelectedItemOrChild(items: SelectableItem[], destination: string) {\n    for (const /** @type {?} */ itm of items) {\n      if (itm.hasChild) {\n        if (itm.id === destination) {\n          itm.selected = true;\n        }\n        this.setSelectedItemOrChild(itm.children, destination);\n      } else if (itm.id === destination) {\n        itm.selected = true;\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic getSelection(): any | any[] {\n    if (this.Configuration.allowMultiple) {\n      return this.getInternalSelection().map((v) => v.data);\n    } else {\n      const /** @type {?} */ result = this.getInternalSelection();\n      if (result && result.length > 0) {\n        return result[0].data;\n      }\n    }\n\n    return null;\n  }\n/**\n * @return {?}\n */\npublic getInternalSelection(): SelectableItem[] {\n    const /** @type {?} */ selectedItems = this.getSelectedItems(this._items);\n    if (selectedItems && selectedItems.length > 0) {\n      let /** @type {?} */ i = 0;\n      const /** @type {?} */ max = this._options.maxVisibleItemCount ? this._options.maxVisibleItemCount : 0;\n\n      for (const /** @type {?} */ item of selectedItems) {\n        item.isVisible =\n          // Max not reached or not max value\n          (i < max || max === 0) &&\n          // all my children are unselected\n          (!item.hasChild || item.children.every((child) => child.selected === false));\n        if (item.isVisible && max > 0) {\n          i++;\n        }\n      }\n    }\n    return selectedItems;\n  }\n/**\n * @param {?} item\n * @return {?}\n */\npublic toggleItemSelection(item: SelectableItem): void {\n    if (!this.Configuration.allowMultiple) {\n      this.setAllUnselected(this._items);\n    }\n    item.selected = !item.selected;\n    this.setConfiguration((opt) => opt.model = this.getSelection(), false);\n    if (this.Configuration.closeOnSelection) {\n      this.setConfiguration((opt) => opt.isOpen = false, false);\n    }\n  }\n/**\n * @param {?} items\n * @return {?}\n */\npublic setAllUnselected(items: SelectableItem[]) {\n    for (const /** @type {?} */ itm of items) {\n      if (itm.hasChild) {\n        itm.selected = false;\n        this.setAllUnselected(itm.children);\n      } else {\n        itm.selected = false;\n      }\n    }\n  }\n/**\n * @param {?} delegate\n * @param {?} processItems\n * @return {?}\n */\npublic setConfiguration(delegate: OptionDelegate, processItems: boolean): void {\n    const /** @type {?} */ modelBck = this._options.model;\n    delegate(this._options);\n    if (this._options.isValid()) {\n      this.reconfigure(processItems);\n    }\n    // if model changed, raise event\n    if (\n      !processItems &&\n      (\n        (modelBck && this._options.model !== modelBck) ||\n        (!modelBck && this._options.model)\n      )\n    ) {\n      this.modelChanged$.next(this._options.model);\n    }\n  }\n/**\n * @return {?}\n */\npublic get Configuration(): SelectOption {\n    return this._options;\n  }\n/**\n * @return {?}\n */\npublic setExpand() {\n    this.setExpandForList(this._items);\n  }\n/**\n * @param {?} items\n * @return {?}\n */\nprivate setExpandForList(items: SelectableItem[]) {\n    if (!items) {\n      return;\n    }\n    for (const /** @type {?} */ item of items) {\n      this.setExpandForList(item.children);\n      item.isOpen = (this._options.filterExpandMode === ExpandMode.All);\n      if (this._options.filterExpandMode === ExpandMode.Selection) {\n        if (item.children) {\n          item.isOpen = item.children.some(\n            (itm: SelectableItem) => itm.isOpen || itm.selected\n          );\n        }\n      }\n    }\n  }\n/**\n * @param {?} sources\n * @return {?}\n */\nprivate toSelectableItems(sources: any[]): SelectableItem[] {\n    if (sources && Array.isArray(sources)) {\n      let /** @type {?} */ i = 1;\n      return sources.map((srcItem) => {\n        let /** @type {?} */ item: SelectableItem;\n        if (srcItem[this._options.idProperty] &&\n            srcItem[this._options.idProperty] !== '' &&\n            srcItem[this._options.textProperty]) {\n          item = new SelectableItem(\n            (srcItem[this._options.idProperty] || '').toString(), /** @type {?} */((\n            srcItem[this._options.textProperty] as string)),\n            srcItem,\n            this\n          );\n        } else {\n          item = new SelectableItem(\n            i.toString(), /** @type {?} */((\n            srcItem as string)),\n            srcItem,\n            this\n          );\n          i++;\n        }\n        if (this._options.isHierarchy()) {\n          item.children = this.toSelectableItems(srcItem[this._options.childProperty]);\n        }\n        return item;\n      });\n    }\n\n    return [];\n  }\n/**\n * @param {?} array\n * @return {?}\n */\nprivate getSelectedItems(array: SelectableItem[]): SelectableItem[] {\n    if (this.Configuration.isValid()) {\n      let /** @type {?} */ res: SelectableItem[] = [];\n      for (const /** @type {?} */ v of array) {\n        if (v.hasChild && v.selected === true) {\n          if (v.children.every((child) => child.selected === false)) {\n            res = [...res, v];\n          } else {\n            res = [...res, ...this.getSelectedItems(v.children)];\n          }\n        } else if (v.hasChild) {\n          res = [...res, ...this.getSelectedItems(v.children)];\n        } else if (v.selected === true) {\n          res = [...res, v];\n        }\n      }\n      return res;\n    } else {\n      return [];\n    }\n  }\n/**\n * @param {?} processItems\n * @return {?}\n */\nprivate reconfigure(processItems: boolean): void {\n    if (this.Configuration.isValid()) {\n      this.checkConfig();\n      if (processItems) {\n        this._items = this.toSelectableItems(this.Configuration.items);\n      }\n\n      const /** @type {?} */ model = this.getModel();\n      let /** @type {?} */ select: SelectableItem[] = [];\n      model.forEach((v) => {\n        select = [...select, ...this.getItemForModel(v, this._items)];\n      });\n      select.forEach((v) => v._selected = true);\n    }\n  }\n/**\n * @return {?}\n */\nprivate checkConfig() {\n    if (this.Configuration.allowMultiple && this.Configuration.closeOnSelection) {\n      this.Configuration.closeOnSelection = false;\n    } else if (!this.Configuration.allowMultiple && !this.Configuration.closeOnSelection) {\n      this.Configuration.closeOnSelection = true;\n    }\n  }\n/**\n * @return {?}\n */\nprivate getModel(): any[] {\n    if (!this.Configuration.model) {\n      return [];\n    } else if (!Array.isArray(this.Configuration.model)) {\n      return [this.Configuration.model];\n    } else {\n      return this.Configuration.model;\n    }\n  }\n/**\n * @param {?} value\n * @param {?} array\n * @return {?}\n */\nprivate getItemForModel(value: any, array: SelectableItem[]): SelectableItem[] {\n    let /** @type {?} */ result: SelectableItem[] = [];\n    for (const /** @type {?} */ v of array) {\n      if (value) {\n        if (typeof value !== 'object') {\n          if (v.data === value) {\n            result.push(v);\n          }\n        } else {\n          if (value[this.Configuration.idProperty]) {\n            if (v.id === (value[this.Configuration.idProperty] || '').toString()) {\n              result.push(v);\n            }\n          }\n          if (this.Configuration.isHierarchy() && v.children && v.children.length > 0) {\n            result = [...result, ...this.getItemForModel(value, v.children)];\n          }\n        }\n      }\n    }\n    return result;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectService_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectService.ctorParameters;\n/** @type {?} */\nSelectService.prototype.modelChanged$;\n/** @type {?} */\nSelectService.prototype._items;\n/** @type {?} */\nSelectService.prototype._options;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ExpandMode } from './expand-mode';\nexport class SelectOption {\npublic idProperty = 'id';\npublic textProperty = 'text';\npublic childProperty: string = null;\npublic allowMultiple = false;\npublic closeOnSelection = true;\npublic items: any[] = [];\npublic model: any[] | any;\npublic isOpen = false;\npublic filter = '';\npublic filterCaseSensitive = false;\npublic allowParentSelection = false;\npublic maxVisibleItemCount: number;\npublic expandMode = ExpandMode.None;\n/**\n * @return {?}\n */\npublic isHierarchy(): boolean {\n    return this.childProperty && this.childProperty.trim().length > 0;\n  }\n/**\n * @return {?}\n */\npublic get filterExpandMode(): ExpandMode {\n     if (this.filter !== '') {\n        return ExpandMode.All;\n     } else {\n       return this.expandMode;\n     }\n  }\n/**\n * @return {?}\n */\npublic displayCheckbox(): boolean {\n    return this.allowMultiple && this.isHierarchy();\n  }\n/**\n * @return {?}\n */\npublic isValid(): boolean {\n    // Check id property value\n    return this.idProperty && this.idProperty.trim().length > 0 &&\n      // Check text property value\n      this.textProperty && this.textProperty.trim().length > 0 &&\n      // Check items value\n      this.items && Array.isArray(this.items) && this.items.length > 0;\n  }\n}\n\nfunction SelectOption_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectOption.prototype.idProperty;\n/** @type {?} */\nSelectOption.prototype.textProperty;\n/** @type {?} */\nSelectOption.prototype.childProperty;\n/** @type {?} */\nSelectOption.prototype.allowMultiple;\n/** @type {?} */\nSelectOption.prototype.closeOnSelection;\n/** @type {?} */\nSelectOption.prototype.items;\n/** @type {?} */\nSelectOption.prototype.model;\n/** @type {?} */\nSelectOption.prototype.isOpen;\n/** @type {?} */\nSelectOption.prototype.filter;\n/** @type {?} */\nSelectOption.prototype.filterCaseSensitive;\n/** @type {?} */\nSelectOption.prototype.allowParentSelection;\n/** @type {?} */\nSelectOption.prototype.maxVisibleItemCount;\n/** @type {?} */\nSelectOption.prototype.expandMode;\n}\n\n","import { SelectService } from '../services/select.service';\nexport class SelectableItem {\npublic _selected = false;\npublic children?: SelectableItem[];\npublic isOpen = false;\npublic matchFilter = true;\npublic isVisible = false;\n/**\n * @param {?} id\n * @param {?} text\n * @param {?} data\n * @param {?} svc\n */\nconstructor(public id: string,\npublic text: string,\npublic data: any,\npublic svc: SelectService) {\n  }\n/**\n * @return {?}\n */\nget hasChild(): boolean {\n    return this.children && this.children.length > 0;\n  }\n/**\n * @return {?}\n */\nget checked(): boolean {\n    if (this.hasChild && this.svc.Configuration.allowMultiple) {\n      if (this.children.every((child) => child.selected)) {\n        return true;\n      } else if (this.children.every((child) => child.selected === false)) {\n        return this._selected;\n      }\n      return null;\n    }\n    return this._selected;\n  }\n/**\n * @return {?}\n */\nget selected(): boolean {\n    if (this.hasChild && this.svc.Configuration.allowMultiple) {\n      if (this.children.some((child) => child.selected)) {\n        if (this.svc.Configuration.allowParentSelection) {\n          this._selected = false;\n        }\n        return true;\n      } else if (this.children.every((child) => child.selected === false)) {\n        if (this.svc.Configuration.allowParentSelection) {\n          return this._selected;\n        } else {\n          return this._selected = false;\n        }\n      }\n      return false;\n    } else if (this.hasChild && this._selected === true) {\n      for (const /** @type {?} */ itm of this.children) {\n        itm.selected = false;\n      }\n    }\n\n    return this._selected;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset selected(value: boolean) {\n    if (this.hasChild && !this.svc.Configuration.allowParentSelection) {\n      if (value !== null) {\n        this.children.forEach((child) => child.selected = value);\n      }\n    } else {\n      this._selected = value;\n    }\n  }\n}\n\nfunction SelectableItem_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectableItem.prototype._selected;\n/** @type {?} */\nSelectableItem.prototype.children;\n/** @type {?} */\nSelectableItem.prototype.isOpen;\n/** @type {?} */\nSelectableItem.prototype.matchFilter;\n/** @type {?} */\nSelectableItem.prototype.isVisible;\n/** @type {?} */\nSelectableItem.prototype.id;\n/** @type {?} */\nSelectableItem.prototype.text;\n/** @type {?} */\nSelectableItem.prototype.data;\n/** @type {?} */\nSelectableItem.prototype.svc;\n}\n\n","import { Injectable } from '@angular/core';\nimport { ExpandMode } from './expand-mode';\nexport class TreeSelectDefaultOptions {\npublic allowFilter?: boolean;\npublic filterPlaceholder?: string;\npublic maxVisibleItemCount?: number;\npublic allowParentSelection?: boolean;\npublic idField?: string;\npublic textField?: string;\npublic childrenField?: string;\npublic filterCaseSensitive?: boolean;\npublic expandMode = ExpandMode.None;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TreeSelectDefaultOptions_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeSelectDefaultOptions.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeSelectDefaultOptions.ctorParameters;\n/** @type {?} */\nTreeSelectDefaultOptions.prototype.allowFilter;\n/** @type {?} */\nTreeSelectDefaultOptions.prototype.filterPlaceholder;\n/** @type {?} */\nTreeSelectDefaultOptions.prototype.maxVisibleItemCount;\n/** @type {?} */\nTreeSelectDefaultOptions.prototype.allowParentSelection;\n/** @type {?} */\nTreeSelectDefaultOptions.prototype.idField;\n/** @type {?} */\nTreeSelectDefaultOptions.prototype.textField;\n/** @type {?} */\nTreeSelectDefaultOptions.prototype.childrenField;\n/** @type {?} */\nTreeSelectDefaultOptions.prototype.filterCaseSensitive;\n/** @type {?} */\nTreeSelectDefaultOptions.prototype.expandMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ExpandMode {\npublic static None = 'None';\npublic static Selection = 'Selection';\npublic static All = 'All';\n}\n\nfunction ExpandMode_tsickle_Closure_declarations() {\n/** @type {?} */\nExpandMode.None;\n/** @type {?} */\nExpandMode.Selection;\n/** @type {?} */\nExpandMode.All;\n}\n\n"],"names":["FormsModule","CommonModule","NgModule","Input","Component","Inject","PLATFORM_ID","Directive","isPlatformBrowser","Pipe","forwardRef","NG_VALUE_ACCESSOR","Injectable","Subject"],"mappings":"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"}