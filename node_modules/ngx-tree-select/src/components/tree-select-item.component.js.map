{"version":3,"sources":["../../../../src/ngx-tree-select/src/components/tree-select-item.component.ts"],"names":[],"mappings":"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","file":"tree-select-item.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  Output\n  } from '@angular/core';\nimport { SelectableItem } from '../models/selectable-item';\nimport { SelectService } from '../services/select.service';\nexport class TreeSelectItemComponent {\n/**\n * @return {?}\n */\npublic get isOpen() {\n    return this.item.isOpen;\n  }\npublic onTouchedCallBack: () => void;\npublic item: SelectableItem;\n/**\n * @param {?} svc\n */\npublic constructor(\nprivate svc: SelectService\n  ) { }\n/**\n * @param {?} $event\n * @return {?}\n */\npublic toggleOpen($event: any) {\n    $event.stopPropagation();\n    if (this.haveChildren) {\n      this.item.isOpen = !this.item.isOpen;\n    } else {\n      this.select($event);\n    }\n  }\n/**\n * @return {?}\n */\nget allowParentSelection(): boolean {\n    return this.svc.Configuration.allowParentSelection;\n  }\n/**\n * @return {?}\n */\nget needCheckBox(): boolean {\n    return this.svc.Configuration.isHierarchy() && this.svc.Configuration.allowMultiple;\n  }\n/**\n * @return {?}\n */\npublic get haveChildren(): boolean {\n    return this.item && this.item.children && this.item.children.length > 0;\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\npublic select($event: any): void {\n    $event.stopPropagation();\n    if (this.svc.Configuration.allowMultiple ||\n        !this.haveChildren ||\n        this.svc.Configuration.allowParentSelection) {\n      this.svc.toggleItemSelection(this.item);\n    }\n    this.onTouchedCallBack();\n  }\n/**\n * @return {?}\n */\npublic get filter(): string {\n    return this.svc.Configuration.filter;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tree-select-item',\n  templateUrl: './tree-select-item.component.html',\n  styleUrls: ['./tree-select-item.component.scss']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onTouchedCallBack': [{ type: Input },],\n'item': [{ type: Input },],\n};\n}\n\nfunction TreeSelectItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeSelectItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeSelectItemComponent.ctorParameters;\n/** @type {?} */\nTreeSelectItemComponent.propDecorators;\n/** @type {?} */\nTreeSelectItemComponent.prototype.onTouchedCallBack;\n/** @type {?} */\nTreeSelectItemComponent.prototype.item;\n/** @type {?} */\nTreeSelectItemComponent.prototype.svc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}