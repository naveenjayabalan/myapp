{"version":3,"sources":["../../../../src/ngx-tree-select/src/components/tree-select.component.ts"],"names":[],"mappings":"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","file":"tree-select.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  forwardRef,\n  HostListener,\n  Input,\n  OnInit\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ItemPipe } from '../pipes/item.pipe';\nimport { SelectableItem } from '../models/selectable-item';\nimport { SelectOption } from '../models/select-option';\nimport { SelectService } from '../services/select.service';\nimport { TreeSelectDefaultOptions } from '../models/tree-select-default-options';\nimport { ExpandMode } from '../models/expand-mode';\n\n// tslint:disable-next-line:no-empty\nconst /** @type {?} */ noop = () => {};\n\nexport const /** @type {?} */ CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line:no-forward-ref\n  useExisting: forwardRef(() => TreeSelectComponent),\n  multi: true\n};\nexport class TreeSelectComponent implements ControlValueAccessor {\npublic onTouchedCallback: () => void = noop;\npublic showMoreLink = false;\npublic moreLoaded = false;\npublic disabled = false;\npublic placeholder = '';\npublic filterPlaceholder = 'Type here for filtering items...';\npublic allowFilter = true;\nprivate _isOpen = false;\nprivate onChangeCallback: (_: any) => void = noop;\nprivate haveFocus = false;\nprivate inputFocus = false;\n/**\n * @param {?} value\n * @return {?}\n */\npublic set items(value: any[]) {\n    this.svc.setItems(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set idField(value: string) {\n    this.svc.setConfiguration((opt) => opt.idProperty = value, true);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set textField(value: string) {\n    this.svc.setConfiguration((opt) => opt.textProperty = value, true);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set allowParentSelection(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.allowParentSelection = value, true);\n  }\n/**\n * @return {?}\n */\npublic get allowParentSelection(): boolean {\n    return this.svc.Configuration.allowParentSelection;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set childrenField(value: string) {\n    this.svc.setConfiguration((opt) => opt.childProperty = value, true);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set multiple(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.allowMultiple = value, true);\n  }\n/**\n * @return {?}\n */\npublic get multiple(): boolean {\n    return this.svc.Configuration.allowMultiple;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set filterCaseSensitive(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.filterCaseSensitive = value, true);\n  }\n/**\n * @return {?}\n */\npublic get filterCaseSensitive(): boolean {\n    return this.svc.Configuration.filterCaseSensitive;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set expandMode(value: string) {\n    this.svc.setConfiguration((opt) => opt.expandMode = value, true);\n    this.svc.setExpand();\n  }\n/**\n * @return {?}\n */\npublic get expandMode(): string {\n    return this.svc.Configuration.expandMode;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set maxVisibleItemCount(value: number) {\n    this.svc.setConfiguration((opt) => opt.maxVisibleItemCount = value, true);\n  }\n/**\n * @return {?}\n */\npublic get maxVisibleItemCount(): number {\n    return this.svc.Configuration.maxVisibleItemCount;\n  }\n/**\n * @return {?}\n */\npublic get internalItems(): SelectableItem[] {\n    return this.svc.getInternalItems() || [];\n  }\n/**\n * @return {?}\n */\npublic get selection(): SelectableItem[] {\n    this.showMoreLink = (\n      this.maxVisibleItemCount > 0 &&\n      ((this.svc.getInternalSelection().length - this.maxVisibleItemCount) > 0)\n    );\n    return this.svc.getInternalSelection();\n  }\n/**\n * @return {?}\n */\npublic get filter(): string {\n    return this.svc.Configuration.filter;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set filter(value: string) {\n    this.svc.setConfiguration((opt) => opt.filter = value, false);\n    for (const /** @type {?} */ item of this.internalItems) {\n      this.ProcessMatchFilterTreeItem(item, this.svc.Configuration.filter);\n    }\n    this.svc.setExpand();\n  }\n/**\n * @param {?} svc\n * @param {?} defaultOpts\n */\npublic constructor(\nprivate svc: SelectService,\nprivate defaultOpts: TreeSelectDefaultOptions\n  ) {\n    this.clickedOutside = this.clickedOutside.bind(this);\n\n    this.svc.modelChanged$.subscribe((result) => {\n      this.onChangeCallback(result);\n    });\n    this.maxVisibleItemCount = (defaultOpts.maxVisibleItemCount || 0);\n    this.allowParentSelection = (\n      (defaultOpts.allowParentSelection === undefined ||\n       defaultOpts.allowParentSelection === null) ?\n        true :\n        defaultOpts.allowParentSelection\n    );\n    this.allowFilter = (\n      (defaultOpts.allowFilter === undefined || defaultOpts.allowFilter === null) ?\n        true :\n        defaultOpts.allowFilter\n    );\n    this.filterCaseSensitive = (\n      (defaultOpts.filterCaseSensitive === undefined || defaultOpts.filterCaseSensitive === null) ?\n        false :\n        defaultOpts.filterCaseSensitive\n    );\n    this.filterPlaceholder = (defaultOpts.filterPlaceholder || 'Type here for filtering items...');\n    this.idField = (defaultOpts.idField || 'id');\n    this.textField = (defaultOpts.textField || 'id');\n    this.childrenField = (defaultOpts.childrenField || '');\n    this.expandMode = (defaultOpts.expandMode || ExpandMode.None);\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\npublic keyUp($event: any) {}\n/**\n * @param {?} $event\n * @return {?}\n */\npublic toggle($event: any) {\n    $event.preventDefault();\n    this.haveFocus = true;\n    this.svc.toggleOpen();\n  }\n/**\n * @param {?} $event\n * @param {?} item\n * @return {?}\n */\npublic removeItem($event: any, item: SelectableItem): void {\n    $event.stopPropagation();\n    this.svc.toggleItemSelection(item);\n  }\n/**\n * @return {?}\n */\npublic get isOpen(): boolean {\n    return this.svc.Configuration.isOpen;\n  }\n/**\n * @return {?}\n */\npublic clickedOutside() {\n    if (!this.inputFocus) {\n      if (!this.haveFocus && this.isOpen || this.haveFocus && !this.isOpen) {\n        this.onTouched();\n      }\n      this.haveFocus = false;\n    }\n  }\n/**\n * @return {?}\n */\npublic onTouched() {\n    this.svc.close();\n    this.onTouchedCallback();\n  }\n/**\n * @return {?}\n */\npublic setInputFocus() {\n    this.inputFocus = true;\n  }\n/**\n * @return {?}\n */\npublic setInputFocusOut() {\n    this.inputFocus = false;\n  }\n/**\n * Write a new value to the element.\n * \n * \\@memberof TreeSelectComponent\n * @param {?} value\n * @return {?}\n */\npublic writeValue(value: any): void {\n    this.svc.setSelection(value);\n  }\n/**\n * Set the function to be called when the control receives a change event.\n * \n * \\@memberof TreeSelectComponent\n * @param {?} fn\n * @return {?}\n */\npublic registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n/**\n * Set the function to be called when the control receives a touch event.\n * \n * \\@memberof TreeSelectComponent\n * @param {?} fn\n * @return {?}\n */\npublic registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n/**\n * This function is called when the control status changes to or from \"DISABLED\".\n * Depending on the value, it will enable or disable the appropriate DOM element.\n * \n * \\@memberof TreeSelectComponent\n * @param {?} isDisabled\n * @return {?}\n */\npublic setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n/**\n * This finction is called when user click on show more link.\n * \n * \\@memberof TreeSelectComponent\n * @param {?} $event\n * @return {?}\n */\npublic loadMore($event: any) {\n    $event.stopPropagation();\n    this.moreLoaded = !this.moreLoaded;\n  }\n/**\n * @param {?} tree\n * @param {?} filter\n * @return {?}\n */\nprivate ProcessMatchFilterTreeItem(tree: SelectableItem, filter: string): boolean {\n    let /** @type {?} */ result = false;\n    if (tree && tree.children && tree.children.length > 0) {\n      for (const /** @type {?} */ child of tree.children) {\n        result = this.ProcessMatchFilterTreeItem(child, filter) || result;\n      }\n    }\n    tree.matchFilter = this.filterCaseSensitive ?\n                      (\n                        tree.id.indexOf(filter) > -1 ||\n                        tree.text.indexOf(filter) > -1 ||\n                        result) :\n                      (\n                        tree.id.toLowerCase().indexOf(filter.toLowerCase()) > -1 ||\n                        tree.text.toLowerCase().indexOf(filter.toLowerCase()) > -1 ||\n                        result\n                      );\n    return tree.matchFilter;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tree-select',\n  templateUrl: './tree-select.component.html',\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR, SelectService],\n  styleUrls: ['./tree-select.component.scss']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SelectService, },\n{type: TreeSelectDefaultOptions, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'filterPlaceholder': [{ type: Input },],\n'allowFilter': [{ type: Input },],\n'items': [{ type: Input },],\n'idField': [{ type: Input },],\n'textField': [{ type: Input },],\n'allowParentSelection': [{ type: Input },],\n'childrenField': [{ type: Input },],\n'multiple': [{ type: Input },],\n'filterCaseSensitive': [{ type: Input },],\n'expandMode': [{ type: Input },],\n'maxVisibleItemCount': [{ type: Input },],\n};\n}\n\nfunction TreeSelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeSelectComponent.ctorParameters;\n/** @type {?} */\nTreeSelectComponent.propDecorators;\n/** @type {?} */\nTreeSelectComponent.prototype.onTouchedCallback;\n/** @type {?} */\nTreeSelectComponent.prototype.showMoreLink;\n/** @type {?} */\nTreeSelectComponent.prototype.moreLoaded;\n/** @type {?} */\nTreeSelectComponent.prototype.disabled;\n/** @type {?} */\nTreeSelectComponent.prototype.placeholder;\n/** @type {?} */\nTreeSelectComponent.prototype.filterPlaceholder;\n/** @type {?} */\nTreeSelectComponent.prototype.allowFilter;\n/** @type {?} */\nTreeSelectComponent.prototype._isOpen;\n/** @type {?} */\nTreeSelectComponent.prototype.onChangeCallback;\n/** @type {?} */\nTreeSelectComponent.prototype.haveFocus;\n/** @type {?} */\nTreeSelectComponent.prototype.inputFocus;\n/** @type {?} */\nTreeSelectComponent.prototype.svc;\n/** @type {?} */\nTreeSelectComponent.prototype.defaultOpts;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}