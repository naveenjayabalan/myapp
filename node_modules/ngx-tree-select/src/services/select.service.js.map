{"version":3,"sources":["../../../../src/ngx-tree-select/src/services/select.service.ts"],"names":[],"mappings":"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","file":"select.service.js","sourceRoot":"","sourcesContent":["import { Subject } from 'rxjs/Subject';\nimport { SelectableItem } from '../models/selectable-item';\nimport { SelectOption } from '../models/select-option';\nimport { Injectable } from '@angular/core';\nimport { ExpandMode } from '../models/expand-mode';\n\nexport type OptionDelegate = (options: SelectOption) => void;\nexport class SelectService {\npublic modelChanged$: Subject<any> = new Subject<any>();\nprivate _items: SelectableItem[];\nprivate _options: SelectOption = new SelectOption();\n/**\n * @return {?}\n */\npublic close(): void {\n    if (this.Configuration.isOpen) {\n      this.setConfiguration((opt) => opt.isOpen = false, false);\n    }\n  }\n/**\n * @return {?}\n */\npublic open(): void {\n    if (!this.Configuration.isOpen) {\n      this.setConfiguration((opt) => opt.isOpen = true, false);\n    }\n  }\n/**\n * @return {?}\n */\npublic toggleOpen(): void {\n    this.setConfiguration((opt) => opt.isOpen = !opt.isOpen, false);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\npublic setItems(value: any[]) {\n    this.setConfiguration((opt) => opt.items = value, true);\n    this.setExpand();\n  }\n/**\n * @return {?}\n */\npublic getInternalItems(): SelectableItem[] {\n    return this._items;\n  }\n/**\n * @param {?} values\n * @return {?}\n */\npublic setSelection(values: any | any[]): void {\n    this.setConfiguration((opt) => opt.model = values, true);\n    this.setExpand();\n  }\n/**\n * @param {?} items\n * @param {?} destination\n * @return {?}\n */\npublic setSelectedItemOrChild(items: SelectableItem[], destination: string) {\n    for (const /** @type {?} */ itm of items) {\n      if (itm.hasChild) {\n        if (itm.id === destination) {\n          itm.selected = true;\n        }\n        this.setSelectedItemOrChild(itm.children, destination);\n      } else if (itm.id === destination) {\n        itm.selected = true;\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic getSelection(): any | any[] {\n    if (this.Configuration.allowMultiple) {\n      return this.getInternalSelection().map((v) => v.data);\n    } else {\n      const /** @type {?} */ result = this.getInternalSelection();\n      if (result && result.length > 0) {\n        return result[0].data;\n      }\n    }\n\n    return null;\n  }\n/**\n * @return {?}\n */\npublic getInternalSelection(): SelectableItem[] {\n    const /** @type {?} */ selectedItems = this.getSelectedItems(this._items);\n    if (selectedItems && selectedItems.length > 0) {\n      let /** @type {?} */ i = 0;\n      const /** @type {?} */ max = this._options.maxVisibleItemCount ? this._options.maxVisibleItemCount : 0;\n\n      for (const /** @type {?} */ item of selectedItems) {\n        item.isVisible =\n          // Max not reached or not max value\n          (i < max || max === 0) &&\n          // all my children are unselected\n          (!item.hasChild || item.children.every((child) => child.selected === false));\n        if (item.isVisible && max > 0) {\n          i++;\n        }\n      }\n    }\n    return selectedItems;\n  }\n/**\n * @param {?} item\n * @return {?}\n */\npublic toggleItemSelection(item: SelectableItem): void {\n    if (!this.Configuration.allowMultiple) {\n      this.setAllUnselected(this._items);\n    }\n    item.selected = !item.selected;\n    this.setConfiguration((opt) => opt.model = this.getSelection(), false);\n    if (this.Configuration.closeOnSelection) {\n      this.setConfiguration((opt) => opt.isOpen = false, false);\n    }\n  }\n/**\n * @param {?} items\n * @return {?}\n */\npublic setAllUnselected(items: SelectableItem[]) {\n    for (const /** @type {?} */ itm of items) {\n      if (itm.hasChild) {\n        itm.selected = false;\n        this.setAllUnselected(itm.children);\n      } else {\n        itm.selected = false;\n      }\n    }\n  }\n/**\n * @param {?} delegate\n * @param {?} processItems\n * @return {?}\n */\npublic setConfiguration(delegate: OptionDelegate, processItems: boolean): void {\n    const /** @type {?} */ modelBck = this._options.model;\n    delegate(this._options);\n    if (this._options.isValid()) {\n      this.reconfigure(processItems);\n    }\n    // if model changed, raise event\n    if (\n      !processItems &&\n      (\n        (modelBck && this._options.model !== modelBck) ||\n        (!modelBck && this._options.model)\n      )\n    ) {\n      this.modelChanged$.next(this._options.model);\n    }\n  }\n/**\n * @return {?}\n */\npublic get Configuration(): SelectOption {\n    return this._options;\n  }\n/**\n * @return {?}\n */\npublic setExpand() {\n    this.setExpandForList(this._items);\n  }\n/**\n * @param {?} items\n * @return {?}\n */\nprivate setExpandForList(items: SelectableItem[]) {\n    if (!items) {\n      return;\n    }\n    for (const /** @type {?} */ item of items) {\n      this.setExpandForList(item.children);\n      item.isOpen = (this._options.filterExpandMode === ExpandMode.All);\n      if (this._options.filterExpandMode === ExpandMode.Selection) {\n        if (item.children) {\n          item.isOpen = item.children.some(\n            (itm: SelectableItem) => itm.isOpen || itm.selected\n          );\n        }\n      }\n    }\n  }\n/**\n * @param {?} sources\n * @return {?}\n */\nprivate toSelectableItems(sources: any[]): SelectableItem[] {\n    if (sources && Array.isArray(sources)) {\n      let /** @type {?} */ i = 1;\n      return sources.map((srcItem) => {\n        let /** @type {?} */ item: SelectableItem;\n        if (srcItem[this._options.idProperty] &&\n            srcItem[this._options.idProperty] !== '' &&\n            srcItem[this._options.textProperty]) {\n          item = new SelectableItem(\n            (srcItem[this._options.idProperty] || '').toString(), /** @type {?} */((\n            srcItem[this._options.textProperty] as string)),\n            srcItem,\n            this\n          );\n        } else {\n          item = new SelectableItem(\n            i.toString(), /** @type {?} */((\n            srcItem as string)),\n            srcItem,\n            this\n          );\n          i++;\n        }\n        if (this._options.isHierarchy()) {\n          item.children = this.toSelectableItems(srcItem[this._options.childProperty]);\n        }\n        return item;\n      });\n    }\n\n    return [];\n  }\n/**\n * @param {?} array\n * @return {?}\n */\nprivate getSelectedItems(array: SelectableItem[]): SelectableItem[] {\n    if (this.Configuration.isValid()) {\n      let /** @type {?} */ res: SelectableItem[] = [];\n      for (const /** @type {?} */ v of array) {\n        if (v.hasChild && v.selected === true) {\n          if (v.children.every((child) => child.selected === false)) {\n            res = [...res, v];\n          } else {\n            res = [...res, ...this.getSelectedItems(v.children)];\n          }\n        } else if (v.hasChild) {\n          res = [...res, ...this.getSelectedItems(v.children)];\n        } else if (v.selected === true) {\n          res = [...res, v];\n        }\n      }\n      return res;\n    } else {\n      return [];\n    }\n  }\n/**\n * @param {?} processItems\n * @return {?}\n */\nprivate reconfigure(processItems: boolean): void {\n    if (this.Configuration.isValid()) {\n      this.checkConfig();\n      if (processItems) {\n        this._items = this.toSelectableItems(this.Configuration.items);\n      }\n\n      const /** @type {?} */ model = this.getModel();\n      let /** @type {?} */ select: SelectableItem[] = [];\n      model.forEach((v) => {\n        select = [...select, ...this.getItemForModel(v, this._items)];\n      });\n      select.forEach((v) => v._selected = true);\n    }\n  }\n/**\n * @return {?}\n */\nprivate checkConfig() {\n    if (this.Configuration.allowMultiple && this.Configuration.closeOnSelection) {\n      this.Configuration.closeOnSelection = false;\n    } else if (!this.Configuration.allowMultiple && !this.Configuration.closeOnSelection) {\n      this.Configuration.closeOnSelection = true;\n    }\n  }\n/**\n * @return {?}\n */\nprivate getModel(): any[] {\n    if (!this.Configuration.model) {\n      return [];\n    } else if (!Array.isArray(this.Configuration.model)) {\n      return [this.Configuration.model];\n    } else {\n      return this.Configuration.model;\n    }\n  }\n/**\n * @param {?} value\n * @param {?} array\n * @return {?}\n */\nprivate getItemForModel(value: any, array: SelectableItem[]): SelectableItem[] {\n    let /** @type {?} */ result: SelectableItem[] = [];\n    for (const /** @type {?} */ v of array) {\n      if (value) {\n        if (typeof value !== 'object') {\n          if (v.data === value) {\n            result.push(v);\n          }\n        } else {\n          if (value[this.Configuration.idProperty]) {\n            if (v.id === (value[this.Configuration.idProperty] || '').toString()) {\n              result.push(v);\n            }\n          }\n          if (this.Configuration.isHierarchy() && v.children && v.children.length > 0) {\n            result = [...result, ...this.getItemForModel(value, v.children)];\n          }\n        }\n      }\n    }\n    return result;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectService_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectService.ctorParameters;\n/** @type {?} */\nSelectService.prototype.modelChanged$;\n/** @type {?} */\nSelectService.prototype._items;\n/** @type {?} */\nSelectService.prototype._options;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}