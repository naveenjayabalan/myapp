{"version":3,"sources":["../../../../src/ngx-tree-select/src/directives/off-click.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAET,MAAM,EACN,KAAK,EAGL,WAAW,EACV,MAAM,eAAA,CAAgB;AACzB,OAAO,EAAE,iBAAA,EAAkB,MAAA,iBAAA,CAAA;AAC3B;IAEA;;OAEG;IACH,2BAGwB,UAAY;QAAZ,eAAA,GAAA,UAAA,CAAY;IAAO,CAAA;IAD3C;;OAEG;IACA,oCAAA,GAAH;QAAA,iBAIG;QAHC,EAAE,CAAC,CAAC,iBAAC,CAAiB,IAAC,CAAI,UAAC,CAAU,CAAC,CAAC,CAAA;YACtC,UAAU,CAAC,cAAQ,QAAA,CAAS,gBAAC,CAAgB,OAAC,EAAQ,KAAA,CAAK,eAAC,CAAe,CAAC,CAAC,CAAA,EAAG,CAAA,CAAE,CAAC;QACrF,CAAC;IACH,CAAC;IACH;;OAEG;IADA,uCAAA,GAEH;QACI,EAAE,CAAC,CAAC,iBAFC,CAAiB,IAAC,CAAI,UAAC,CAAU,CAAC,CAAC,CAAA;YAGtC,QAAQ,CAFC,mBAAC,CAAmB,OAAC,EAAQ,IAAA,CAAK,eAAC,CAAe,CAAC;QAG9D,CAAC;IACH,CAAC;IADI,4BAAA,GAAoC;QAG3C,EAFE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;oBAGvB,QAAQ,EAFE,aAAA;iBAGX,EAFC,EAAG;KAGJ,CAFC;IAGF;;OAEG;IAHF,gCAAA,GAAA,cAAA,OAAA;QAKD,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAG,EAAC;KACzE,EANA,CAMA,CAVC;IAOK,gCAAA,GAAyD;QAKhE,iBAAiB,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,WAAE,EAAW,EAAG,EAAE;KAK1D,CAJC;IAKF,wBAAC;CArCD,AAqCC,IAAA;SAnCA,iBAAA;AAqCD;IACA,gBAAgB;IAChB,iBAAiB,CAAC,UAAU,CAAC;IAC7B;;;OAGG;IACH,iBAAiB,CAAC,cAAc,CAAC;IACjC,gBAAgB;IAChB,iBAAiB,CAAC,cAAc,CAAC;IACjC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,eAAe,CAAC;IAC5C,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,UAAU,CAAC;AACvC,CAAC","file":"off-click.directive.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID\n  } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nexport class OffClickDirective implements OnInit, OnDestroy {\npublic offClickHandler: any;\n/**\n * @param {?} platformId\n */\nconstructor(\nprivate platformId: string) { }\n/**\n * @return {?}\n */\npublic ngOnInit(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      setTimeout(() => { document.addEventListener('click', this.offClickHandler); }, 0);\n    }\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): any {\n    if (isPlatformBrowser(this.platformId)) {\n      document.removeEventListener('click', this.offClickHandler);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[off-click]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'offClickHandler': [{ type: Input, args: ['off-click', ] },],\n};\n}\n\nfunction OffClickDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nOffClickDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOffClickDirective.ctorParameters;\n/** @type {?} */\nOffClickDirective.propDecorators;\n/** @type {?} */\nOffClickDirective.prototype.offClickHandler;\n/** @type {?} */\nOffClickDirective.prototype.platformId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}